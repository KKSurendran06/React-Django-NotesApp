{"ast":null,"code":"var _jsxFileName = \"/home/kk/amfoss/curiculum/notesApp/react-NotesApp/frontend/src/components/AddNote.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddNote = ({\n  handleAddNote\n}) => {\n  _s();\n  const date = new Date();\n  const datetFormatted = date.getFullYear() + '-' + (date.getMonth() + 1).toString().padStart(2, '0') + '-' + date.getDate().toString().padStart(2, '0');\n  // const [titleText, setTitleText] = useState('');\n\n  const [noteText, setNoteText] = useState('');\n  const [dueDate, setDueDate] = useState('');\n  const charecterLimit = 200;\n  const handleChange = event => {\n    if (charecterLimit - event.target.value.length >= 0) setNoteText(event.target.value);\n  };\n  const handleDueDate = event => {\n    setDueDate(event.target.value);\n  };\n  const handleSaveClick = () => {\n    if (noteText.trim().length > 0 && dueDate !== \"\") {\n      handleAddNote(noteText, dueDate, datetFormatted);\n      setNoteText(\"\");\n      setDueDate(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note new\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: \"8\",\n      cols: \"10\",\n      placeholder: \"description ...\",\n      value: noteText,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"small\", {\n        children: \"Set a Deadline :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"due-date\",\n        value: dueDate,\n        placeholder: \"(mm/dd/yyyy)\",\n        onChange: handleDueDate,\n        type: \"date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"small\", {\n        children: [charecterLimit - noteText.length, \" charecters remaining\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: handleSaveClick,\n        children: \"save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(AddNote, \"zOhYcBeV7lgfRuAHSDcxSXQTfGw=\");\n_c = AddNote;\nexport default AddNote;\nvar _c;\n$RefreshReg$(_c, \"AddNote\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","AddNote","handleAddNote","_s","date","Date","datetFormatted","getFullYear","getMonth","toString","padStart","getDate","noteText","setNoteText","dueDate","setDueDate","charecterLimit","handleChange","event","target","value","length","handleDueDate","handleSaveClick","trim","className","children","rows","cols","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["/home/kk/amfoss/curiculum/notesApp/react-NotesApp/frontend/src/components/AddNote.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst AddNote = ({handleAddNote}) => {\n    const date = new Date()\n    const datetFormatted = date.getFullYear() + '-' +\n    (date.getMonth() + 1).toString().padStart(2, '0') + '-' + date.getDate().toString().padStart(2, '0');\n    // const [titleText, setTitleText] = useState('');\n    \n    const [noteText, setNoteText] = useState('');\n    const [dueDate, setDueDate] = useState('');\n    const charecterLimit = 200;\n\n    const handleChange = (event) => {\n        if(charecterLimit - event.target.value.length >= 0)\n            setNoteText(event.target.value);\n    };\n\n    const handleDueDate = (event) => {\n        setDueDate(event.target.value);\n    }\n\n    const handleSaveClick = () => {\n        if(noteText.trim().length > 0 && dueDate !== \"\"){\n            handleAddNote(noteText, dueDate, datetFormatted);\n            setNoteText(\"\");\n            setDueDate(\"\");\n        }\n    };\n    return(\n        <div className=\"note new\">\n            {/* <input type=\"text\" value=\"\" placeholder=\"Title\" className=\"title\"></input> */}\n            <textarea\n                rows=\"8\"\n                cols=\"10\"\n                placeholder=\"description ...\"\n                value={noteText}\n                onChange={handleChange}\n            ></textarea>\n            <div>\n                <small>Set a Deadline :</small>\n            </div>\n            <div>\n                <input className=\"due-date\"  value={dueDate} placeholder=\"(mm/dd/yyyy)\"  onChange={handleDueDate} type=\"date\" />\n            </div>\n            <div className=\"footer\">\n                <small>\n                    {charecterLimit - noteText.length} charecters remaining\n                </small>\n                <button className=\"btn\"  onClick={handleSaveClick}>save</button>\n            </div>\n        </div>\n\n    )\n\n}\n\nexport default AddNote;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}